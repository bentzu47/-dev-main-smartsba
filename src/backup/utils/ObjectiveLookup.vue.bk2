<template>
  <div :id="`${id}-lookup`" :class="`${className}`">
    <label :for="`${name}`" :class="`form-label ${required ? 'require' : ''}`"
      >วัตถุประสงค์ / Objective</label
    >
    <ComboBox
      class="form-control"
      :aria-describedby="`${name}Help`"
      :data-items="dataList"
      :text-field="'text'"
      :default-item="defaultItem"
      :required="true"
      placeholder="Choose..."
    />
    <div v-if="isError" :id="`${id}Help`" class="form-text">
      We'll never share your email with anyone else.
    </div>
  </div>
</template>
<script setup lang="ts">
interface ObjectiveParams {
  section?: string;
  type?: string;
  name?: string;
}
interface ObjectiveAttrs {
  id?: string;
  name?: string;
  value?: string;
  className?: string;
  required?: boolean;
  isError?: boolean;
  params?: ObjectiveParams;
}

const props = withDefaults(defineProps<ObjectiveAttrs>(), {
  id: "objective",
  name: "objective",
  value: "",
  className: "mb-3",
  required: true,
  isError: false,
  params: {
    section: "",
    type: "",
    name: "",
  },
});
const defaultItem: Ref<string> = ref("");
</script>

<script lang="ts">
import axios from "axios";
import { ComboBox } from "@progress/kendo-vue-dropdowns";
const config = useRuntimeConfig();
const dataList: Ref<Array<null|object>> = ref([]);
export default {
  components: {
    ComboBox,
  },
  data() {
    return {
      headers: {
        "content-type": "application/json; charset=UTF-8",
        "fs-key": "52f4dcfb-7be6-4ad0-8e00-f238d8c4296e",
        "fs-track": "ncit2",
        microservice: "false",
      },
      body: {
        section: "BSE602AObjective",
        type: "L",
        name: "",
      },
    };
  },
  methods: {
    queryObjectiveLookup: (): void => {
      axios
        .post(`${useRuntimeConfig().public.apiUtil}/inqsbconfig/collect`, this.body, {
          headers: this.headers,
        })
        .then((resp) => {
          console.log("SUCCESS : inqsbconfig");
          let list = resp?.data?.body?.lists ? resp.data.body.lists : [];
          this.setDataSource(list);
        })
        .catch((error) => {
          console.log("ERROR : inqsbconfig");
          console.error("Request canceled", error);
        });
    },
    setDataSource: (dataSource: Array<null | object>): void => {
      dataList.value = dataSource;
    },
  },
};
</script>
